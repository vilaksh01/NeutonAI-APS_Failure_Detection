#ifdef INCLUDED_BY_NEUTON_C

/* Model info */
#define NEUTON_MODEL_HEADER_VERSION 1
#define NEUTON_MODEL_QLEVEL 32
#define NEUTON_MODEL_FLOAT_SUPPORT 1
#define NEUTON_MODEL_TASK_TYPE 1  // binary classification
#define NEUTON_MODEL_NEURONS_COUNT 33
#define NEUTON_MODEL_WEIGHTS_COUNT 245
#define NEUTON_MODEL_INPUTS_COUNT 170
#define NEUTON_MODEL_INPUT_LIMITS_COUNT 170
#define NEUTON_MODEL_OUTPUTS_COUNT 2
#define NEUTON_MODEL_LOG_SCALE_OUTPUTS 0

/* Preprocessing */
#define NEUTON_PREPROCESSING_ENABLED 0
#define NEUTON_BITMASK_ENABLED 0

/* Limits */
static const float modelInputMin[] = {
	0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1 };
static const float modelInputMax[] = {
	2746564, 204, 2.1307068e+09, 8.584298e+09, 21050, 20070, 3376892, 4109372,
	10552856, 63402072, 2.2883058e+08, 1.7918798e+08, 94020664, 63346752, 17702522,
	25198514, 74247320, 16512852, 5629340, 10444924, 34762576, 55903508, 1.4086182e+08,
	1.2220182e+08, 77934944, 25562646, 350, 1655240, 10400504, 2626676, 794458,
	116652, 50553892, 80525376, 28474838, 13945170, 40028704, 1.2494891e+08,
	1.2768033e+08, 4.8967814e+08, 1.0456699e+08, 18824656, 10124620, 4530258,
	14217662, 45584240, 1.230471e+08, 4.6783232e+08, 64589140, 39158216, 1947884,
	666148, 2.3287171e+08, 1.1628328e+08, 55807388, 36931416, 25158556, 19208664,
	18997660, 14314086, 31265984, 43706408, 1.9287154e+08, 396952, 306452,
	810568, 51050, 74247320, 3200582, 44937496, 45736316, 1310700, 1310700,
	1310700, 1310700, 1310700, 1310700, 1310700, 1310700, 1037240, 2746564.8,
	1.9287154e+08, 1.9287154e+08, 1.8635386e+08, 1002003, 40542588, 120956,
	1209520, 1.4861518e+08, 1209600, 4908098, 8.584298e+09, 21400, 2, 1.4098613e+08,
	60949672, 55428668, 130560, 73370, 6278490, 14512994, 58508608, 94979328,
	1.6986931e+08, 1.1781576e+08, 72080408, 33143734, 7541716, 36398376, 8.584298e+09,
	496360, 1.9287154e+08, 57450, 839240, 438806, 46085940, 42421856, 74860624,
	3.7914211e+08, 73741976, 12884218, 1584558, 44902992, 910366, 733688, 81610512,
	44105496, 931472, 19156530, 21006, 9636, 1.2075949e+08, 445142, 176176,
	21613910, 27064294, 1.2470088e+08, 22987424, 726750, 5483574, 1.0385812e+08,
	23697916, 2924584, 1874542, 348118, 6.351873e+09, 50137664, 4970962, 656432,
	4.6020762e+08, 1.2703454e+08, 1.1428842e+08, 3793022, 1414, 8506, 1.322457e+09,
	106020.22, 82806, 74984448, 98224376, 77933928, 37758392, 97152376, 57435236,
	31607814, 1.1958011e+08, 19267396, 3810078, 482, 1146 };

static const float modelOutputMin[] = { 0, 0 };
static const float modelOutputMax[] = { 1, 1 };

/* Types */
typedef float coeff_t;
typedef float weight_t;
typedef double acc_signed_t;
typedef double acc_unsigned_t;
typedef uint8_t sources_size_t;
typedef uint8_t weights_size_t;
typedef uint8_t neurons_size_t;

/* Structure */
static const weight_t modelWeights[] = {
	-0.13027555, -1, -0.25927305, -0.089416772, -1, 0, -0.24337658, -1, -0.93425661,
	-0.13306415, 0.45578551, 0, -0.31953758, 1, -0.37865478, 1, -0.16955879,
	-0.40362281, -0.99994493, 0.033779174, -1, 0.94214803, -0.29990757, 0.77368373,
	0.018773226, -0.82156372, 0.18457563, -0.87855667, 1, 0.45967621, -0.3279447,
	0.8168335, -0.076599121, -0.0030708667, 1, -1, -0.87013608, -0.17746049,
	-0.59759629, 0.52021593, -0.00073242188, -0.39770395, -0.044657212, -0.74070072,
	0.17532688, 0.048946138, -0.12042236, -0.35590026, -1, -0.26767272, 0.87592155,
	-1, 1, 1, 0.0077438354, -0.22897328, -0.29489937, 0.99999994, -0.99999982,
	0.78103203, -0.82817078, -0.18352449, 0.27493575, -0.076770931, -0.3643828,
	-0.42645773, 0.038333349, -0.99608827, -0.020027161, -0.81206322, 0.67834544,
	0.001198411, 0.2530942, -1, -1, -0.025024414, -0.25042769, -0.99122262,
	0.99999976, -0.11990242, 0.4374671, -0.99999964, -0.016418457, -0.70274019,
	-0.13646427, 0.70750439, 0.89927441, 0.066291884, -0.96874988, -0.51975363,
	-0.66604024, 0.28627336, -0.99999934, 0.084209636, -0.38862115, -0.23550214,
	0.23860168, -0.65335381, -0.40734506, -0.028843455, -1, 0.66754979, 0.054321289,
	-0.22144994, -0.76090211, -0.042975832, -0.99570656, -1, 0.29567847, 0.27764893,
	0.0085830688, -0.96760595, 0.99597311, 0.94453168, -0.83174038, -0.99996537,
	0.74980241, -0.86676884, -0.44665182, -0.85745835, 0.16443574, -0.97910017,
	-0.40481234, 0, 0.99816602, -0.47356087, -0.99999845, -0.065530643, 0.30511838,
	0.084094472, -0.24021149, 0.4638359, 0.99999917, -0.004947911, -1, 0.59209263,
	-0.37069702, -0.70061159, -0.91928029, -0.41793072, -1, -1, 0.95744967,
	0, -0.36579251, -1, 0.060383916, -1, 1, 0, -0.93143326, 0.18431969, 0.24772032,
	-0.17407687, -0.7649852, 0.64122754, 0.9639051, 0.22060372, -0.98649681,
	-1, -0.13859253, -0.057724804, -0.59375393, -0.11362359, 0.26295406, -1,
	-0.98858953, 0.99414062, 0, -0.65451759, 0.36580899, -0.21437714, -0.47727916,
	-1, -1, 0, -0.19055861, 0.75194013, -0.43067241, 0.047376458, -0.025022993,
	-0.2109375, -0.28524452, -0.89648616, 0.99992168, -0.6541841, -1, -0.80566406,
	0, -1, 0.28294557, -1, -1, -1, 0, -1, -1, -0.39899221, 0.34872204, -0.27345175,
	-0.089886479, 0.05645752, -0.65897489, -0.49537534, -0.40489131, 0.46649483,
	0.98437083, 0.99999988, 0.018327713, -0.9999944, -0.97856414, -0.30007368,
	0.18803282, -0.99999976, 0.75653124, 0, -0.92064476, -1, 1, -0.80121142,
	0.0289464, 0.96875, -0.81333238, 0, 0.85310656, -0.27400768, -0.73977345,
	0.63639152, 0.47101778, -0.094730355, 1, 0.21996883, 0.5, -0.56941944,
	-1, 0.39500165, -0.51982921, -0.39204088, 0.28988934, 0.29007667, -0.875,
	-0.35245788, 0.5348146, -0.37831298, 0.047659464 };

static const sources_size_t modelLinks[] = {
	0, 8, 70, 88, 99, 170, 0, 8, 32, 142, 165, 170, 1, 8, 14, 35, 69, 110,
	130, 170, 0, 2, 32, 71, 90, 170, 14, 23, 33, 82, 89, 143, 170, 0, 10, 36,
	40, 73, 97, 106, 170, 1, 33, 79, 87, 98, 170, 6, 13, 22, 95, 104, 134,
	163, 170, 5, 7, 6, 48, 54, 104, 170, 1, 3, 5, 7, 88, 166, 170, 0, 18, 86,
	110, 132, 151, 170, 2, 12, 33, 79, 117, 160, 170, 5, 14, 37, 88, 96, 117,
	170, 5, 7, 10, 13, 67, 89, 170, 1, 23, 81, 143, 155, 170, 7, 24, 80, 83,
	135, 162, 169, 170, 14, 23, 25, 68, 82, 89, 170, 6, 10, 66, 69, 160, 170,
	4, 15, 20, 79, 84, 92, 170, 5, 6, 89, 99, 169, 170, 10, 13, 96, 98, 124,
	137, 170, 1, 69, 75, 102, 149, 170, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 170, 2, 46, 58, 134, 144, 155, 170, 15, 17, 2, 24, 156, 160, 170, 1,
	16, 21, 96, 164, 170, 15, 16, 20, 8, 107, 157, 170, 0, 24, 107, 142, 165,
	170, 0, 1, 2, 3, 73, 133, 170, 7, 12, 89, 93, 108, 166, 170, 25, 0, 2,
	67, 77, 80, 170, 6, 5, 28, 73, 89, 127, 168, 170, 0, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 170 };

static const weights_size_t modelIntLinksBoundaries[] = {
	0, 6, 13, 22, 26, 34, 41, 48, 57, 66, 69, 77, 84, 93, 98, 104, 111, 120,
	126, 132, 139, 145, 161, 163, 171, 179, 185, 191, 199, 203, 210, 217, 244 };
static const weights_size_t modelExtLinksBoundaries[] = {
	6, 12, 20, 26, 33, 41, 47, 55, 62, 69, 76, 83, 90, 97, 103, 111, 118, 124,
	131, 137, 144, 150, 162, 169, 176, 182, 189, 195, 202, 209, 216, 224, 245 };

static const coeff_t modelFuncCoeffs[] = {
	39.999947, 40, 24.214828, 11.010129, 18.450169, 39.999786, 18.179689, 40,
	19.738121, 35.784492, 40, 39.999809, 40, 12.468482, 15.062239, 39.980503,
	27.531256, 40, 30.024952, 30.024981, 40, 37.506271, 13.741501, 40, 40,
	13.036329, 39.99939, 40, 35.012505, 39.999981, 40, 15.466761, 10.255213 };

static const neurons_size_t modelOutputNeurons[] = { 32, 22 };

#endif // INCLUDED_BY_NEUTON_C

